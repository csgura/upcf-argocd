modules = [
	ulib.Defaults
	upolicy.Defaults
	scpcli.Defaults
	echolib.Defaults
	echolib.StartAllServer
	scpcli.NRFLocalConfig
	scpcli.TokenLocalConfig
	ulib.Trace
	//ulib.TraceAll
]

logrus {
	format = "text"
	config-file = ${CONFIG_DIR}/logger.conf
}

trace.config-path = ${CONFIG_DIR}/jaegertrace.yaml

http-servers {
	smfsim {
		port = 80
		tls = false
		serve-for = NF
		services {
			smfsim {
				prefix = "/smfsim"
			}
			
			smpolicy-noti {
				// 규격대로 prefix 를 설정합니다.
				prefix = "/pcf-noti"
				
				allowed-roles = [
				// oauth
				]
			}
		
		}
	}
}

http-client {
    circuit-breaker {
        // response를 받지 못한 request 의 최대 개수입니다.
        // 최대개수를 넘어가면 즉시 BadGateway 에러를 리턴합니다.
        maxPendingRequest = 2048
    }
}

// 서버 인증서 및  ca list 파일 설정입니다.
cert-store {

	common-name = "upcf-smfsim.upcf.svc.cluster.local"
    issuer = unrf
	nf-instance-id = 2200946e-3a25-11ed-a261-0242ac120002
	nf-type = SMF
	PLMN {
		mcc : 450, 
		mnc : 05
	}

	peer-certs-file = ${CONFIG_DIR}/camel_git_cert.pem

	// token 생성에 사용할 인증서 입니다.
	named {
		unrf {
			cert-file = ${CONFIG_DIR}/unrf_cert.pem
			key-file = ${CONFIG_DIR}/unrf_key.pem
		}
	}
}

nrf-local-config : {
	"acc8accc-3a24-11ed-a261-0242ac120002" : {
		token : "hello world"
 		nfServices : [{
			serviceInstanceId : "pcf1-1"
			fqdn : upcf-upcf.upcf.svc.cluster.local
			nfServiceStatus : REGISTERED
			priority : 1
			scheme : https
			serviceName : npcf-smpolicycontrol
			oauth2Required : false
			versions : [{
				apiVersionInUri : v1
			}]
		}]
		nfStatus : REGISTERED
		nfType : PCF
		plmnList : [{
			mcc : 450
			mnc : "90"
		}]

		nfSetIdList : [ "sethello.pcfset.5gc.mnc090.mcc450" ]
	} 
}